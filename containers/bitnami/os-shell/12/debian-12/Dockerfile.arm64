# syntax=docker/dockerfile:1.4
FROM golang:1.19.4-bullseye AS ini-file

RUN cd /tmp && \
    mkdir -p /opt/bitnami && \
    export PACKAGE=ini-file && \
    export TARGET_DIR=common && \
    export VERSION=1.4.7 && \
    export REF=v${VERSION} && \
    export CGO_ENABLED=0  && \
    rm -rf ${PACKAGE} || true && \
    mkdir -p ${PACKAGE} && \
    git clone -b "${REF}" https://github.com/bitnami/ini-file ${PACKAGE} && \
    cd ${PACKAGE} && \
    go mod download && \
    go build -v -ldflags '-d -s -w' . && \
    mkdir -p /opt/bitnami/${TARGET_DIR}/licenses && \
    mkdir -p /opt/bitnami/${TARGET_DIR}/bin && \
    find . -name LICENSE.md -exec cp -f {} /opt/bitnami/${TARGET_DIR}/licenses/${PACKAGE}-${VERSION}.txt \; && \
    find . -name COPYING -exec cp -f {} /opt/bitnami/${TARGET_DIR}/licenses/${PACKAGE}-${VERSION}.txt \; && \
    cp -f ${PACKAGE} /opt/bitnami/${TARGET_DIR}/bin/${PACKAGE} && \
    cd .. && \
    rm -rf ${PACKAGE} && \
    find /opt/bitnami -exec touch -a -m -t 202301010000.00 {} \;


FROM golang:1.19.4-bullseye AS render-template

RUN cd /tmp && \
    mkdir -p /opt/bitnami && \
    export PACKAGE=render-template && \
    export TARGET_DIR=common && \
    export VERSION=1.0.7 && \
    export REF=v${VERSION} && \
    export CGO_ENABLED=0  && \
    rm -rf ${PACKAGE} || true && \
    mkdir -p ${PACKAGE} && \
    git clone -b "${REF}" https://github.com/bitnami/render-template ${PACKAGE} && \
    cd ${PACKAGE} && \
    go mod download && \
    go build -v -ldflags '-d -s -w' . && \
    mkdir -p /opt/bitnami/${TARGET_DIR}/licenses && \
    mkdir -p /opt/bitnami/${TARGET_DIR}/bin && \
    find . -name LICENSE.md -exec cp -f {} /opt/bitnami/${TARGET_DIR}/licenses/${PACKAGE}-${VERSION}.txt \; && \
    find . -name COPYING -exec cp -f {} /opt/bitnami/${TARGET_DIR}/licenses/${PACKAGE}-${VERSION}.txt \; && \
    cp -f ${PACKAGE} /opt/bitnami/${TARGET_DIR}/bin/${PACKAGE} && \
    cd .. && \
    rm -rf ${PACKAGE} && \
    find /opt/bitnami -exec touch -a -m -t 202301010000.00 {} \;


FROM golang:1.19.4-bullseye AS wait-for-port

RUN cd /tmp && \
    mkdir -p /opt/bitnami && \
    export PACKAGE=wait-for-port && \
    export TARGET_DIR=common && \
    export VERSION=1.0.8 && \
    export REF=v${VERSION} && \
    export CGO_ENABLED=0  && \
    rm -rf ${PACKAGE} || true && \
    mkdir -p ${PACKAGE} && \
    git clone -b "${REF}" https://github.com/bitnami/wait-for-port ${PACKAGE} && \
    cd ${PACKAGE} && \
    go mod download && \
    go build -v -ldflags '-d -s -w' . && \
    mkdir -p /opt/bitnami/${TARGET_DIR}/licenses && \
    mkdir -p /opt/bitnami/${TARGET_DIR}/bin && \
    find . -name LICENSE.md -exec cp -f {} /opt/bitnami/${TARGET_DIR}/licenses/${PACKAGE}-${VERSION}.txt \; && \
    find . -name COPYING -exec cp -f {} /opt/bitnami/${TARGET_DIR}/licenses/${PACKAGE}-${VERSION}.txt \; && \
    cp -f ${PACKAGE} /opt/bitnami/${TARGET_DIR}/bin/${PACKAGE} && \
    cd .. && \
    rm -rf ${PACKAGE} && \
    find /opt/bitnami -exec touch -a -m -t 202301010000.00 {} \;


FROM mikefarah/yq:4.45.1 AS yq


# Copyright Broadcom, Inc. All Rights Reserved.
# SPDX-License-Identifier: APACHE-2.0

FROM docker.io/bitnami/minideb:bookworm

ARG DOWNLOADS_URL="downloads.bitnami.com/files/stacksmith"
ARG TARGETARCH

LABEL com.vmware.cp.artifact.flavor="sha256:c50c90cfd9d12b445b011e6ad529f1ad3daea45c26d20b00732fae3cd71f6a83" \
      org.opencontainers.image.base.name="docker.io/bitnami/minideb:bookworm" \
      org.opencontainers.image.created="2025-03-15T18:40:50Z" \
      org.opencontainers.image.description="Application repackaged by ZCube for arm64 compatible, originaly Bitnami" \
      org.opencontainers.image.documentation="https://github.com/bitnami/containers/tree/main/bitnami/os-shell/README.md" \
      org.opencontainers.image.ref.name="12.0.0-debian-12-r64" \
      org.opencontainers.image.source="https://github.com/ZCube/bitnami-compat" \
      org.opencontainers.image.title="os-shell" \
      org.opencontainers.image.vendor="ZCube" \
      org.opencontainers.image.version="12"

ENV HOME="/" \
    OS_ARCH="${TARGETARCH:-amd64}" \
    OS_FLAVOUR="debian-12" \
    OS_NAME="linux"

COPY prebuildfs /
SHELL ["/bin/bash", "-o", "errexit", "-o", "nounset", "-o", "pipefail", "-c"]
# Install required system packages and dependencies
RUN install_packages ca-certificates curl jq procps
RUN mkdir -p /tmp/bitnami/pkg/cache/ ; cd /tmp/bitnami/pkg/cache/ ; \
    COMPONENTS=( \
      "yq-4.45.1-6-linux-${OS_ARCH}-debian-12" \
      "wait-for-port-1.0.8-14-linux-${OS_ARCH}-debian-12" \
      "render-template-1.0.7-14-linux-${OS_ARCH}-debian-12" \
      "ini-file-1.4.7-14-linux-${OS_ARCH}-debian-12" \
    ) ; \
    for COMPONENT in "${COMPONENTS[@]}"; do \
      if [ ! -f "${COMPONENT}.tar.gz" ]; then \
        curl -SsLf "https://${DOWNLOADS_URL}/${COMPONENT}.tar.gz" -O ; \
        curl -SsLf "https://${DOWNLOADS_URL}/${COMPONENT}.tar.gz.sha256" -O ; \
      fi ; \
      sha256sum -c "${COMPONENT}.tar.gz.sha256" ; \
      tar -zxf "${COMPONENT}.tar.gz" -C /opt/bitnami --strip-components=2 --no-same-owner --wildcards '*/files' ; \
      rm -rf "${COMPONENT}".tar.gz{,.sha256} ; \
    done

COPY --from=ini-file /opt/bitnami/common/ /opt/bitnami/common/



COPY --from=render-template /opt/bitnami/common/ /opt/bitnami/common/


COPY --from=wait-for-port /opt/bitnami/common/ /opt/bitnami/common/


RUN install_packages curl ca-certificates \
 && mkdir -p /opt/bitnami/common/licenses \
 && curl -L -o /opt/bitnami/common/licenses/LICENSE \
    https://raw.githubusercontent.com/mikefarah/yq/master/LICENSE

COPY --from=yq /usr/bin/yq /opt/bitnami/common/bin/




RUN apt-get update && apt-get upgrade -y && \
    apt-get clean && rm -rf /var/lib/apt/lists /var/cache/apt/archives
RUN find / -perm /6000 -type f -exec chmod a-s {} \; || true

ENV APP_VERSION="12.0.0" \
    BITNAMI_APP_NAME="os-shell" \
    PATH="/opt/bitnami/common/bin:$PATH"

USER 1001
