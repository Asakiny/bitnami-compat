name: Build
on:
  push:
  workflow_dispatch:
  schedule:
    - cron: '0 1 * * 5'

env:
  REGISTRY: ghcr.io

jobs:
  build-bitnami-compat:
    runs-on: ubuntu-latest
    if: >-
      ${{ !contains(github.event.head_commit.message, '[ci skip]') &&
      !contains(github.event.head_commit.message, '[skip ci]')
      }}
    permissions:
      contents: read
      packages: write
    strategy:
      fail-fast: false
      matrix:
        include:
         - APP: "acmesolver"
           REPO_OWNER: "bitnami"
         - APP: "apache-exporter"
           REPO_OWNER: "bitnami"
         - APP: "bitnami-shell"
           REPO_OWNER: "bitnami"
         - APP: "cainjector"
           REPO_OWNER: "bitnami"
         - APP: "cert-manager"
           REPO_OWNER: "bitnami"
         - APP: "cert-manager-webhook"
           REPO_OWNER: "bitnami"
         - APP: "consul"
           REPO_OWNER: "bitnami"
         - APP: "consul-exporter"
           REPO_OWNER: "bitnami"
         - APP: "contour"
           REPO_OWNER: "bitnami"
         - APP: "contour-operator"
           REPO_OWNER: "bitnami"
         - APP: "elasticsearch"
           REPO_OWNER: "bitnami"
         - APP: "elasticsearch-exporter"
           REPO_OWNER: "bitnami"
         - APP: "envoy"
           REPO_OWNER: "bitnami"
         - APP: "etcd"
           REPO_OWNER: "bitnami"
         - APP: "external-dns"
           REPO_OWNER: "bitnami"
         - APP: "fluentd"
           REPO_OWNER: "bitnami"
         - APP: "git"
           REPO_OWNER: "bitnami"
         - APP: "java"
           REPO_OWNER: "bitnami"
         - APP: "jmx-exporter"
           REPO_OWNER: "bitnami"
         - APP: "kafka"
           REPO_OWNER: "bitnami"
         - APP: "kafka-exporter"
           REPO_OWNER: "bitnami"
         - APP: "keycloak"
           REPO_OWNER: "bitnami"
         - APP: "keycloak-config-cli"
           REPO_OWNER: "bitnami"
         - APP: "kubectl"
           REPO_OWNER: "bitnami"
         - APP: "mariadb"
           REPO_OWNER: "bitnami"
         - APP: "mariadb-galera"
           REPO_OWNER: "bitnami"
         - APP: "memcached"
           REPO_OWNER: "bitnami"
         - APP: "memcached-exporter"
           REPO_OWNER: "bitnami"
         - APP: "minio"
           REPO_OWNER: "bitnami"
         - APP: "minio-client"
           REPO_OWNER: "bitnami"
         - APP: "mongodb"
           REPO_OWNER: "bitnami"
         - APP: "mongodb-exporter"
           REPO_OWNER: "bitnami"
         - APP: "mongodb-sharded"
           REPO_OWNER: "bitnami"
         - APP: "mysql"
           REPO_OWNER: "bitnami"
         - APP: "mysqld-exporter"
           REPO_OWNER: "bitnami"
         - APP: "nginx"
           REPO_OWNER: "bitnami"
         - APP: "nginx-exporter"
           REPO_OWNER: "bitnami"
         - APP: "node"
           REPO_OWNER: "bitnami"
         - APP: "openldap"
           REPO_OWNER: "bitnami"
         - APP: "pgpool"
           REPO_OWNER: "bitnami"
         - APP: "postgres-exporter"
           REPO_OWNER: "bitnami"
         - APP: "postgresql"
           REPO_OWNER: "bitnami"
         - APP: "postgresql-repmgr"
           REPO_OWNER: "bitnami"
         - APP: "python"
           REPO_OWNER: "bitnami"
         - APP: "rabbitmq"
           REPO_OWNER: "bitnami"
         - APP: "rabbitmq-cluster-operator"
           REPO_OWNER: "bitnami"
         - APP: "redis"
           REPO_OWNER: "bitnami"
         - APP: "redis-cluster"
           REPO_OWNER: "bitnami"
         - APP: "redis-exporter"
           REPO_OWNER: "bitnami"
         - APP: "redis-sentinel"
           REPO_OWNER: "bitnami"
         - APP: "rmq-default-credential-updater"
           REPO_OWNER: "bitnami"
         - APP: "rmq-messaging-topology-operator"
           REPO_OWNER: "bitnami"
         - APP: "sealed-secrets"
           REPO_OWNER: "bitnami"
         - APP: "solr"
           REPO_OWNER: "bitnami"
         - APP: "thanos"
           REPO_OWNER: "bitnami"
         - APP: "tomcat"
           REPO_OWNER: "bitnami"
         - APP: "wordpress"
           REPO_OWNER: "bitnami"
         - APP: "wordpress-nginx"
           REPO_OWNER: "bitnami"
         - APP: "zookeeper"
           REPO_OWNER: "bitnami"
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Submodule init
        shell: bash
        run: git submodule init
      - name: Checkout bitnami recipe
        shell: bash
        run: git submodule update containers
      - name: Set up QEMU dependency
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Log in to the container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Log in to the container registry
        uses: docker/login-action@v2
        with:
          username: zcube
          password: ${{ secrets.DOCKER_HUB_KEY }}
      - name: Extract lowercase repository name
        uses: ASzc/change-string-case-action@v2
        with:
          string: ${{ github.repository }}
        id: repository
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          # tags: |
          #   type=raw,value=${{ matrix.VERSION_MAJOR }}
          #   type=raw,value=${{ matrix.VERSION_MAJOR }}-${{ matrix.OS_FLAVOUR }}
          #   type=raw,value=${{ matrix.VERSION }}
          #   type=raw,value=${{ matrix.VERSION }}-${{ matrix.OS_FLAVOUR }}
          #   type=raw,value=${{ matrix.VERSION }}-${{ matrix.OS_FLAVOUR }}-r${{ matrix.REVISION }}
          images: ${{ env.REGISTRY }}/${{ steps.repository.outputs.lowercase }}/${{ matrix.APP }}
      # https://stackoverflow.com/questions/58033366/how-to-get-the-current-branch-within-github-actions
      # - name: Extract branch name
      #   shell: bash
      #   run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
      #   id: extract_branch
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19
      - name: Build Docker Image And Push To GHCR And Docker Hub
        shell: bash
        run: |
          go run main.go generate --app=${{ matrix.APP }}
          set -euo pipefail
          n=0
          until [ "$n" -ge 5 ] # retry 5 times
          do
            go run main.go build --app=${{ matrix.APP }} --tag=${{ env.REGISTRY }}/${{ steps.repository.outputs.lowercase }}/,docker.io/zcube/bitnami-compat- --cache-from --cache-to --push --platforms=linux/amd64,linux/arm64 && break
            n=$((n+1)) 
            sleep 15
          done
          if [ "$n" -ge 5 ]; then
            echo "Failed after 5 attempts!"
            exit 1
          fi
      - name: Push To Docker Hub
        shell: bash
        run: |
          set -euo pipefail
          n=0
          until [ "$n" -ge 5 ] # retry 5 times
          do
            go run main.go push --app=${{ matrix.APP }} --tag=${{ env.REGISTRY }}/${{ steps.repository.outputs.lowercase }}/ --tag-to docker.io/zcube/bitnami-compat- --dest-creds=zcube:${{ secrets.DOCKER_HUB_KEY }} && break
            n=$((n+1)) 
            sleep 15
          done
          if [ "$n" -ge 5 ]; then
            echo "Failed after 5 attempts!"
            exit 1
          fi
      - name: Trivy
        shell: bash
        run: |
          go run main.go trivy --app=${{ matrix.APP }} --tag=${{ env.REGISTRY }}/${{ steps.repository.outputs.lowercase }}/ || true
