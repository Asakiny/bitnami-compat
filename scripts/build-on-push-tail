    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Submodule init
        shell: bash
        run: git submodule init
      - name: Checkout bitnami recipe
        shell: bash
        run: git submodule update containers
      - name: Set up QEMU dependency
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Log in to the container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Log in to the container registry
        uses: docker/login-action@v2
        with:
          username: zcube
          password: ${{ secrets.DOCKER_HUB_KEY }}
      - name: install crane
        run: |
          if ! hash crane 2>/dev/null
          then
            if [[ "$OSTYPE" == "linux-gnu"* ]]; then
              OS=Linux
            elif [[ "$OSTYPE" == "darwin"* ]]; then
              OS=Darwin
            else
              OS=Unknown
            fi
            ARCH=""
            case $(uname -m) in
              x86_64)  ARCH="x86_64" ;;
              aarch64) ARCH="arm64" ;;
            esac
          
            echo ${OS}_${ARCH}
          
            mkdir -p /tmp/go-containerregistry
            cd /tmp/go-containerregistry
            curl -o go-containerregistry.tar.gz -sL "https://github.com/google/go-containerregistry/releases/latest/download/go-containerregistry_${OS}_${ARCH}.tar.gz"
            tar zxvf go-containerregistry.tar.gz
            cp -f crane /usr/local/bin/crane
            cp -f gcrane /usr/local/bin/gccrane
            cp -f krane /usr/local/bin/krane
            cd -
          fi
      - name: login
        shell: bash
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | crane auth login ghcr.io --username "dummy" --password-stdin
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19
      - name: Build Docker Image And Push To GHCR
        shell: bash
        run: |
          export repository=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')
          go run main.go generate --app=${{ matrix.APP }}
          set -euo pipefail
          n=0
          until [ "$n" -ge 5 ] # retry 5 times
          do
            go run main.go build --app=${{ matrix.APP }} --tag=${{ env.REGISTRY }}/${repository}/cache/ --cache-from --cache-to --push --platforms=linux/amd64,linux/arm64 && break
            n=$((n+1)) 
            sleep 15
          done
          if [ "$n" -ge 5 ]; then
            echo "Failed after 5 attempts!"
            exit 1
          fi
          n=0
          export APP=${{ matrix.APP }}
          until [ "$n" -ge 5 ] # retry 5 times
          do
            ./scripts/squash_image.sh && break
            n=$((n+1)) 
            sleep 15
          done
          if [ "$n" -ge 5 ]; then
            echo "Failed after 5 attempts!"
            exit 1
          fi
      - name: Push To Docker Hub
        shell: bash
        run: |
          export repository=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')
          set -euo pipefail
          n=0
          until [ "$n" -ge 5 ] # retry 5 times
          do
            go run main.go push --app=${{ matrix.APP }} --tag=${{ env.REGISTRY }}/${repository}/ --tag-to docker.io/zcube/bitnami-compat- --dest-creds=zcube:${{ secrets.DOCKER_HUB_KEY }} && break
            n=$((n+1)) 
            sleep 15
          done
          if [ "$n" -ge 5 ]; then
            echo "Failed after 5 attempts!"
            exit 1
          fi
      - name: Trivy
        shell: bash
        run: |
          export repository=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')
          go run main.go trivy --app=${{ matrix.APP }} --tag=${{ env.REGISTRY }}/${repository}/ || true
