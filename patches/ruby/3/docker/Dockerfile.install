# refer : https://github.com/docker-library/ruby/blob/master/2.7/bullseye/Dockerfile
# license : BSD-2-Clause License
# https://raw.githubusercontent.com/docker-library/ruby/master/LICENSE

RUN install_packages gnupg2 curl zlib1g

ENV RUBY_VERSION {{{VERSION}}}

ENV PATH=/usr/local/rvm/bin:$PATH

ENV LANG C.UTF-8
ENV RUBY_MAJOR {{{VERSION_MAJOR_MINOR}}}
ENV RUBY_VERSION {{{VERSION}}}

# some of ruby's build scripts are written in ruby
#   we purge system ruby later to make sure our final image uses what we just built
RUN set -eux; \
	\
	savedAptMark="$(apt-mark showmanual)"; \
	apt-get update; \
	apt-get install -y --no-install-recommends \
		bison \
		dpkg-dev \
		libgdbm-dev \
		zlib1g-dev \
		build-essential \
		autoconf \
		automake \
		wget \
	; \
	rm -rf /var/lib/apt/lists/*; \
	\
    mkdir /src; \
    git -C /src clone https://github.com/rbenv/ruby-build.git; \
    cd /src/ruby-build && ./install.sh; \
    cd / && rm -fr /src; \
	\
	apt-mark auto '.*' > /dev/null; \
	apt-mark manual $savedAptMark > /dev/null; \
	find /usr/local -type f -executable -not \( -name '*tkinter*' \) -exec ldd '{}' ';' \
		| awk '/=>/ { print $(NF-1) }' \
		| sort -u \
		| grep -vE '^/usr/local/lib/' \
		| xargs -r dpkg-query --search \
		| cut -d: -f1 \
		| sort -u \
		| xargs -r apt-mark manual \
	; \
	apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \
	\
	cd /; \
# verify we have no "ruby" packages installed
	if dpkg -l | grep -i ruby; then exit 1; fi; \
	[ "$(command -v ruby)" = '/usr/local/bin/ruby' ]; \
# rough smoke test
	ruby --version; \
	gem --version; \
	bundle --version

# don't create ".bundle" in all our apps
ENV GEM_HOME /usr/local/bundle
ENV BUNDLE_SILENCE_ROOT_WARNING=1 \
	BUNDLE_APP_CONFIG="$GEM_HOME"
ENV PATH $GEM_HOME/bin:$PATH
# adjust permissions of a few directories for running "gem install" as an arbitrary user
RUN mkdir -p "$GEM_HOME" && chmod 777 "$GEM_HOME"

RUN mkdir -p /opt/bitnami/ruby/bin \
    && mkdir -p /opt/bitnami/ruby/sbin \
    && mkdir -p /opt/bitnami/ruby/lib \
    && ln -s /usr/local/bin/ruby                     /opt/bitnami/ruby/bin/ \
    && ln -s /usr/local/bin/gem                      /opt/bitnami/ruby/bin/ \
    && ln -s /usr/local/bin/bundle                   /opt/bitnami/ruby/bin/
